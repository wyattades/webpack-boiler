-
  if (!htmlWebpackPlugin || !htmlWebpackPlugin.options)
    throw new Error('Must use html-webpack-plugin');

  const { options, files } = htmlWebpackPlugin;
    
  options.headElements = (options.headElements || []).map((el) => {
    const tag = el.tag;
    if (!tag) throw new Error('No tag attribute in headElement');
    delete el.tag;
    return { tag, attr: el };
  });

  options.bodyElements = (options.bodyElements || []).map((el) => {
    const tag = el.tag;
    if (!tag) throw new Error('No tag attribute in bodyElement');
    delete el.tag;
    return { tag, attr: el };
  });

  const mn = options.manifest;
  if (mn) {
    if (options.title) mn.name = options.title;
    if (options.meta && options.meta.description) mn.description = options.meta.description;
    if (options.meta && options.meta['theme-color']) mn.theme_color = options.meta['theme-color'];
    if (files.favicon) mn.icons = [{
      src: files.favicon,
      sizes: '192x192',
    }];
  }

doctype html

html(lang=options.lang || 'en-US')
  head
    meta(charset='utf-8')
    meta(content='ie=edge' http-equiv='x-ua-compatible')

    if (options.baseHref)
      base(href=options.baseHref)

    if (options.meta)
      each content, name in options.meta
        meta(content=content name=name)

    if options.title
      title= options.title

    if (options.googleAnalytics)
      script(async src=`https://www.googletagmanager.com/gtag/js?id=${options.googleAnalytics}`)
      script
        | window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());
        = `gtag('config', '${options.googleAnalytics}');`

    if (options.manifest)
      != `<link rel="manifest" href='data:application/manifest+json,${JSON.stringify(options.manifest)}'/>`

    if (files.favicon || options.faviconExternal)
      link(href=files.favicon || options.faviconExternal rel='icon' sizes='192x192' type='image/png')

    if (options.cache === false)
      meta(http-equiv='Cache-Control' content='no-cache, no-store, must-revalidate')
      meta(http-equiv='Pragma' content='no-cache')
      meta(http-equiv='Expires' content='0')

    if (options.mobile !== false)
      meta(content='width=device-width, initial-scale=1' name='viewport')

    each val, key in files.css
      link(href=val rel='stylesheet')

    each item in options.headElements
      #{item.tag}&attributes(item.attr)

  body

    block page_content

    if (options.appMountId)
      div(id=options.appMountId)
        if (options.loader)
          != options.loader

    if (options.window)
      script(type='text/javascript')
        each key in options.window
          != `window.${key} = '${options.window[key]}';`

    each key in Object.keys(files.chunks)
      script(src=files.chunks[key].entry type='text/javascript')

    each el in options.bodyElements
      #{el.tag}&attributes(el.attr)
